name: Build

on: [push]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [
          { target: "x86_64-unknown-linux-musl", image_tag: "x86_64-musl" },
          { target: "i686-unknown-linux-musl", image_tag: "i686-musl" },
          { target: "aarch64-unknown-linux-musl", image_tag: "aarch64-musl" },
          { target: "armv7-unknown-linux-musleabihf", image_tag: "armv7-musleabihf" },
          { target: "armv7-unknown-linux-musleabi", image_tag: "armv7-musleabi" },
        ]
   #container:
   #  image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
   #  env:
   #    CFLAGS_armv7_unknown_linux_musleabihf: '-mfpu=vfpv3-d16'
    steps:
      - uses: actions/checkout@v3
        with:
            path: man-parse-rust

      - name: Checkout tree-sitter-manchester 
        uses: actions/checkout@v3
        with:
            repository: ckindermann/tree-sitter-manchester
            path: tree-sitter-manchester 

      - name: Install musl
        run: sudo apt-get update && sudo apt-get install musl-tools

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy 
            target: ${{ matrix.platform.target }}

      - name: Install cross
        run: |
            cargo install cross --git https://github.com/cross-rs/cross
            sudo systemctl start docker


      - name: Install tree-sitter
        run: |
            #rustup target add ${{ matrix.platform.target }}
            cargo install tree-sitter-cli

      - name: Build parser
        working-directory: tree-sitter-manchester
        run: |
            tree-sitter generate

     # - name: Cache cargo build
     #   uses: Swatinem/rust-cache@v1
     #   with:
     #     key: ${{ matrix.platform.target }}
     #
      - name: Build
        working-directory: man-parse-rust
        run: cross build --release --target ${{ matrix.platform.target }}
        #run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Upload binary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.target }}-bin
          path: man-parse-rust/target/${{ matrix.platform.target }}/release/man-parse-rust
          #path: man-parse-rust/target/release/man-parse-rust
          if-no-files-found: error
